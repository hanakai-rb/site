#!/usr/bin/env ruby
# frozen_string_literal: true

require "pathname"

APP_ROOT = Pathname.new(__dir__).join("..").realpath

def setup
  header "Installing gems"
  system! "bundle install"

  header "Installing node packages"
  system! "npm install"

  header "All done!"
  puts "For common commands, run:\n"
  puts "  bin/setup help"
end

def help
  puts <<~TEXT
    Useful commands:

      bin/setup
        # Set up the app

      bundle exec hanami dev
        # Run the app locally

      bundle exec rspec
        # Run tests

      bin/setup help
        # Show this help
  TEXT
end

# rubocop:disable Style/GlobalVars

$header_used = false
def header(message)
  puts "#{"\n" if $header_used}\e[1m#{message}\e[0m\n\n"
  $header_used = true
end

# rubocop:enable Style/GlobalVars

# We don't want the setup method to have to do all this error checking, and we also want to
# explicitly puts what we are executing, so we use this method instead of Kernel#system and friends
def system!(*args)
  unless system(*args)
    msg = (args.length == 1) ? args.first.inspect : args.inspect
    puts "\n\e[1mCommand failed:\e[0m #{msg}"

    exit $?.exitstatus
  end
end

if %w[help --help -h].include?(ARGV[0])
  help
else
  setup
end
